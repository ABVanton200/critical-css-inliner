{"version":3,"file":"index.mjs","sources":["../src/index.js"],"sourcesContent":["/**\r\n * Copyright (c) 2019, Anton Babakhin\r\n * All rights reserved. (MIT Licensed)\r\n * \r\n * critical-css-inliner\r\n */\r\n\r\nconst criticalCSSParser = require('critical-css-parser');\r\nconst inline = require('inline-critical');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\nconst DEFAULTS = {\r\n    base: 'dist/',\r\n    src: 'index.html',\r\n    target: 'index-critical.html',\r\n    inlineGoogleFonts: true,\r\n    minify: true,\r\n    ignoreStylesheets: [/bootstrap/],\r\n    whitelist: /#foo|\\.bar/\r\n};\r\n\r\n/**\r\n * Inline critical CSS\r\n * @param  {object} options Options\r\n * @return {Promise<true>} Result success\r\n */\r\nasync function criticalCSSInliner(options) {\r\n\r\n    const props = {...DEFAULTS, ...options};\r\n\r\n    const css = await criticalCSSParser({\r\n        type: 'localServer',\r\n        entrypoint: props.base,\r\n        filename: props.src,\r\n        enableGoogleFonts: props.inlineGoogleFonts,\r\n        minify: props.minify,\r\n        whitelist: props.whitelist\r\n    });\r\n\r\n    const html = fs.readFileSync(path.resolve(props.base, props.src), 'utf8');\r\n\r\n    const inlined = inline(html, css.critical, {\r\n        extract: true,\r\n        basePath: props.base,\r\n        minify: props.minify,\r\n        ignore: props.ignoreStylesheets\r\n    });\r\n\r\n    fs.writeFileSync(path.resolve(props.base, props.target), inlined, 'utf8');\r\n    \r\n    return true;\r\n  \t\r\n}\r\n\r\nmodule.exports = criticalCSSInliner;\r\n"],"names":["criticalCSSParser","require","inline","fs","path","DEFAULTS","base","src","target","inlineGoogleFonts","minify","ignoreStylesheets","whitelist","module","exports","options","props","Object","type","entrypoint","filename","enableGoogleFonts","css","html","readFileSync","resolve","inlined","critical","extract","basePath","ignore","writeFileSync"],"mappings":"IAOMA,EAAoBC,QAAQ,uBAC5BC,EAASD,QAAQ,mBACjBE,EAAKF,QAAQ,MACbG,EAAOH,QAAQ,QAEfI,EAAW,CACbC,KAAM,QACNC,IAAK,aACLC,OAAQ,sBACRC,mBAAmB,EACnBC,QAAQ,EACRC,kBAAmB,CAAC,aACpBC,UAAW,cAoCfC,OAAOC,iBA5B2BC,WAExBC,EAAQC,iBAAIZ,4BAEAL,EAAkB,CAChCkB,KAAM,cACNC,WAAYH,EAAMV,KAClBc,SAAUJ,EAAMT,IAChBc,kBAAmBL,EAAMP,kBACzBC,OAAQM,EAAMN,OACdE,UAAWI,EAAMJ,2BANfU,OASAC,EAAOpB,EAAGqB,aAAapB,EAAKqB,QAAQT,EAAMV,KAAMU,EAAMT,KAAM,QAE5DmB,EAAUxB,EAAOqB,EAAMD,EAAIK,SAAU,CACvCC,SAAS,EACTC,SAAUb,EAAMV,KAChBI,OAAQM,EAAMN,OACdoB,OAAQd,EAAML,2BAGlBR,EAAG4B,cAAc3B,EAAKqB,QAAQT,EAAMV,KAAMU,EAAMR,QAASkB,EAAS,SAE3D"}